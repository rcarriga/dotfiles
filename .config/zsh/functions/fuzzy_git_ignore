BASE_PYTHON='
import http.client as hc
import json


TMP_DIR = "tmp/gitignore"
BASE = "/gitignore/templates"
HOST = "api.github.com"


def get_endpoint(endpoint: str = BASE):
    con = hc.HTTPSConnection(HOST)
    con.request(
        "GET",
        endpoint,
        headers={
            "User-Agent": "Python HTTP",
        },
    )
    res = con.getresponse()
    res_body = json.load(res) if res.status == 200 else None
    res.close()
    return res_body


def get_template_file(key: str):
    try:
        with open(f"{TMP_DIR}/{key}") as file:
            return file.read()
    except FileNotFoundError:
        return None


def save_template_file(key: str, contents: str):
    with open(f"{TMP_DIR}/{key}", "w") as file:
        file.write(contents)


def get_template(key: str) -> str:
    if contents := get_template_file(key):
        return contents
    res = get_endpoint(endpoint=f"{BASE}/{key}")
    contents = res["source"] if res else ""
    save_template_file(key, contents)
    return contents


def list_templates():
    return get_endpoint() or []
'
key=$(python -c "
$BASE_PYTHON
[print(key) for key in list_templates()]
" | fzf --preview "python -c '
$BASE_PYTHON
print(get_template(\"{}\"))
'")
if [[ -n $key ]]; then
    echo "# Generated from GitHub gitignore API for key: $key" >> .gitignore
    python -c "
$BASE_PYTHON
print(get_template('$key'))
" >> .gitignore
fi
